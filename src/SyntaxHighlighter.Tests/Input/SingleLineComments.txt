/*--------------------------------------------------------*\
|   ______    __   |
|  |  __  |  |  |  |
|  | |  | |  |  |  |
|  | !__! |  |  |  |
|  !______!  !__!  |  binary : tech art
|
|  Test single line comments.
|----------------------------------------------------------
|  Copyright(C) 2016 Valeriy Novytskyy
\*---------------------------------------------------------*/

using System;
using System.Linq;
using Microsoft.AspNetCore.Mvc;
using ZeroWeb.Models;

namespace ZeroWeb.Api
{
    /// <summary>
    /// The News Endpoint.
    /// </summary>
    [Route("api/news")]
    public class NewsController: Controller
    {
        /// <summary>
        /// The site data store.
        /// </summary>
        IServiceProvider services;

        /// <summary>
        /// Initializes a new instance of the <see cref="NewsController"/> class.
        /// </summary>
        /// <param name="services">The application container.</param>
        public NewsController(IServiceProvider services)
        {
            // save the services instance.
            this.services = services;
        }

        /// <summary>
        /// Gets the news stories.
        /// </summary>
        public IActionResult GetStories()
        {
            try
            {
                IDataStore store = this.services.GetService(typeof(IDataStore)) as IDataStore;
                string excludeTag = Tags.Story.ToString().ToLower();

                return this.Json(
                    store.GetArticles(Tags.Story).Select(story => new 
                    {
                        id = story.Id,
                        title = story.Title,
                        date = story.Date,
                        author = story.Author.Name,
                        tags = story.Metadata.Where(metadata => metadata.Tag.Name.ToLower() != excludeTag)
                                            .Select(metadata => metadata.Tag.Name),
                        content = story.Content
                    }).ToArray().Select(result => new
                    {
                        result.id, // story Id
                        title = result.title, // story title
                        date = Shared.FormatDate(result.date), // story date
                        author = result.author, // story author.
                        tags = result.tags.Select(tagName => Shared.FormatTag(tagName)), // story tags
                        content = result.content // and the content
                    }));
            }
            catch
            {
                // don't return specific error message for security reasons.
                return this.StatusCode(500);
            }
        }
    }
}