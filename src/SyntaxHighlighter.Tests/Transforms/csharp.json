{
  "patterns": {
    "separators": "(\\s) | (;) | (:) | (=) | (-)[^\\d] | (\\+)[^\\d] | (\\/)[^\\/\\*] | (\\*) | (\\>) | (\\<) | (\\!) | (\\[) | (\\]) | ({) | (}) | (\\s\\() | (\\() | (\\)) | (\\.)[^\\d] | (,) | (\\|) | (&) | (%)",

    "comments": "\\/\\/[^\\n\\r]* | \\/\\*[\\w\\W]+?\\*\\/ | \\#[^\\r\\n]*",

    "strings": "'(?:[^'\\\\]|\\\\.)*' | \"(?:[^\"\\\\]|\\\\.)*\" | @\\\"(?:[^\"]|\\\\.|\\\"\\\")*\\\"",

    "numbers": {
      "pattern": "(?<literal> [+-]? (0x)? ( (\\d+\\.?\\d*) | (\\.\\d+) ) ( [uU][lL]{0,2} | ([eE][-+]\\d*)?[fFlL]* ))",
      "explicit": true
    },

    "keywords": "\\b(abstract)\\W+ | \\b(as)\\W+ | \\b(base)\\W+ | \\b(bool)\\W+ | \\b(break)\\W+ | \\b(byte)\\W+ | \\b(case)\\W+ | \\b(catch)\\W+ | \\b(char)\\W+ | \\b(checked)\\W+ | \\b(class)\\W+ | \\b(const)\\W+ | \\b(continue)\\W+ | \\b(decimal)\\W+ | \\b(default)\\W+ | \\b(delegate)\\W+ | \\b(do)\\W+ | \\b(double)\\W+ | \\b(else)\\W+ | \\b(enum)\\W+ | \\b(event)\\W+ | \\b(explicit)\\W+ | \\b(extern)\\W+ | \\b(finally)\\W+ | \\b(fixed)\\W+ | \\b(float)\\W+ | \\b(for)\\W+ | \\b(foreach)\\W+ | \\b(goto)\\W+ | \\b(if)\\W+ | \\b(implicit)\\W+ | \\b(in)\\W+ | \\b(int)\\W+ | \\b(interface)\\W+ | \\b(internal)\\W+ | \\b(is)\\W+ | \\b(lock)\\W+ | \\b(long)\\W+ | \\b(namespace)\\W+ | \\b(new)\\W+ | \\b(object)\\W+ | \\b(operator)\\W+ | \\b(out)\\W+ | \\b(override)\\W+ | \\b(get)\\W+ | \\b(set)\\W+ | \\b(params)\\W+ | \\b(private)\\W+ | \\b(protected)\\W+ | \\b(public)\\W+ | \\b(readonly)\\W+ | \\b(ref)\\W+ | \\b(return)\\W+ | \\b(sbyte)\\W+ | \\b(sealed)\\W+ | \\b(short)\\W+ | \\b(sizeof)\\W+ | \\b(stackalloc)\\W+ | \\b(static)\\W+ | \\b(string)\\W+ | \\b(struct)\\W+ | \\b(switch)\\W+ | \\b(throw)\\W+ | \\b(try)\\W+ | \\b(typeof)\\W+ | \\b(uint)\\W+ | \\b(ulong)\\W+ | \\b(unchecked)\\W+ | \\b(unsafe)\\W+ | \\b(ushort)\\W+ | \\b(using)\\W+ | \\b(virtual)\\W+ | \\b(var)\\W+ | \\b(void)\\W+ | \\b(volatile)\\W+ | \\b(while)\\W+ | \\b(partial)\\W+ | \\b(yield)\\W+",

    "tags": "<\\/?\\s*(\\w+)[^<>]*\\/?>",
    "attributes": "(\\w+)\\s*=\\s*\"[^\"]*\"",
    "attributeValues": "=\\s*(\"\\w+\")",

    "constants": "^(this)\\W* | ^(null)\\W* | ^(true)\\W* | ^(false)\\W* | ^(Console)\\W*",
    "constantModifiers": "^case\\W*$ | ^const\\W*$",

    "entities": "(\\w+)\\s*[\\(]",
    "entitiesExclusive": "(\\w+)\\s*[^=+-]*$ | (\\w+)\\s*: | (\\w+)\\. | value\\W*$",
    "entityModifiers": "public\\W*$ | private\\W*$ | protected\\W*$ | class\\W*$ | interface\\W*$ | struct\\W*$ | enum\\W*$ | namespace\\W*$ | \\.",

    "entitiesMembers": "(\\w+)\\s*={1,2}\\s* | (\\w+)\\s*[\\+-\\/\\*]?=\\s* | (\\w+)\\s*\\+{1,2}\\s* | (\\w+)\\s*-{1,2}\\s* | (\\w+)\\s*\\*\\s* | (\\w+)\\s*\\/\\s* | (\\w+)\\s*,\\s* | (\\w+)\\s*\\W*",
    "entityMemberModifiers": "\\.",

    "entitiesNamespaces": "(\\w+)\\s*[;.]\\s*",
    "entityNamespaceModifier": "using\\W*$",

    "entityNamesExclusive": "(\\w+)\\s*[^=\\(\\)\\.,:{\\[&|*+-<>\\/]?[;\\s]*$ | (\\w+)\\<[\\s\\W]*",
    "entityNameModifiersExclusive": "; | \\[ | { | \\( | , | is\\W*$ | as\\W*$ | public\\W*$ | private\\W*$ | protected\\W*$ | static\\W*$",

    "entityNames": "(\\w+)\\s*[^=\\(\\.;]*$ | (\\w+)\\s*[\\){][\\W]*$",
    "entityNameModifiers": "< | : | typeof\\W*$ | new\\W*$",

    "entityNamesTemplate": "(\\w+)\\s*\\??>\\W*",
    "entityNameTemplateModifiers": "< | ,",

    "variables": "(\\w+)\\s*[^(]*=?$ | (\\w+)\\s*=\\s*\\(\\s*$ | (\\w+)\\s*,\\s*\\(",

    "types": "^int\\W*$ | ^bool\\W*$ | ^var\\W*$ | ^string\\W*$ | ^float\\W*$ | ^double\\W*$ | ^uint\\W*$ | ^long\\W*$ | ^ulong\\W*$ | ^uint\\W*$ | ^short\\W*$ | ^ushort\\W*$",

    "default": "(\\w+)\\W*$"
  },

  "transforms": [
      {
        "name": "Comments",
        "description": "Single-line and multiline comments",

        "transformType": "TokenSpan",
        "tokenClass": "pl-c",
        "tokenPattern": "comments",

        "transforms": [
          {
            "name": "Comment Entities",
            "description": "Comment documentation tags",

            "tokenClass": "pl-ent",
            "tokenPattern": "tags"
          },

          {
            "name": "Comment Attributes",
            "description": "Comment documentation attributes",

            "tokenClass": "pl-e",
            "tokenPattern": "attributes"
          },

          {
            "name": "Comment Attribute Values",
            "description": "Comment documentation attribute values",

            "tokenClass": "pl-s",
            "tokenPattern": "attributeValues"
          }
        ]
      },

      {
        "name": "Strings",
        "description": "String literals",

        "transformType": "TokenSpan",
        "tokenClass": "pl-s",
        "tokenPattern": "strings"
      },

      {
        "name": "Keywords",
        "description": "Language keywords",

        "transformType": "Token",
        "tokenClass": "pl-k",
        "tokenPattern": "keywords"
      },

      {
        "name": "Constant Literals",
        "description": "Language token literals",

        "transformType": "Token",
        "tokenClass": "pl-c1",
        "tokenPattern": "constants"
      },

      {
        "name": "Constant Identifiers",
        "description": "Identifiers declared constant",

        "transformType": "TokenModifier",
        "tokenClass": "pl-c1",
        "tokenPattern": "default",
        "modifierPattern": "constantModifiers"
      },

      {
        "name": "Numbers",
        "description": "Number literals",

        "transformType": "TokenSpan",
        "tokenClass": "pl-c1",
        "tokenPattern": "numbers"
      },

      {
        "name": "Member Entities",
        "description": "Properties and methods",

        "transformType": "TokenModifier",
        "tokenClass": "pl-e",
        "tokenPattern": "entitiesMembers",
        "modifierPattern": "entityMemberModifiers",
        "excludeClasses": [ "pl-c1" ]
      },

      {
        "name": "Namespace Entities",
        "description": "Namespace declarations",

        "transformType": "TokenModifier",
        "tokenClass": "pl-e",
        "tokenPattern": "entitiesNamespaces",
        "modifierPattern": "entityNamespaceModifier"
      },

      {
        "name": "Variables",
        "description": "Variable identifiers declared with a type",

        "transformType": "TokenModifier",
        "tokenClass": "pl-v",
        "tokenPattern": "variables",
        "modifierPattern": "types"
      },

      {
        "name": "Exclusive Entity Names",
        "description": "Identifiers not preceded by constant or type",

        "transformType": "TokenModifier",
        "tokenClass": "pl-en",
        "tokenPattern": "entityNamesExclusive",
        "modifierPattern": "entityNameModifiersExclusive",
        "excludeClasses": [ "pl-en", "pl-c1" ]
      },

      {
        "name": "Entity Names",
        "description": "User types (built-in types are keywords)",

        "transformType": "TokenModifier",
        "tokenClass": "pl-en",
        "tokenPattern": "entityNames",
        "modifierPattern": "entityNameModifiers"
      },

      {
        "name": "Templated Entity Names",
        "description": "Types in template arguments",

        "transformType": "TokenModifier",
        "tokenClass": "pl-en",
        "tokenPattern": "entityNamesTemplate",
        "modifierPattern": "entityNameTemplateModifiers"
      },

      {
        "name": "Exclusive Entities (Non-Scoped)",
        "description": "Identifiers declared as class, struct, namespace or class access not constrained to being inside of a scope",

        "transformType": "TokenModifier",
        "tokenClass": "pl-e",
        "tokenPattern": "entitiesExclusive",
        "modifierPattern": "entityModifiers",
        "excludeClasses": [ "pl-en", "pl-c1" ]
      },

      {
        "name": "Call Entities",
        "description": "Non-member function calls",

        "transformType": "Token",
        "tokenClass": "pl-e",
        "tokenPattern": "entities"
      },

      {
        "name": "Variables",
        "description": "Unknown identifiers",

        "transformType": "Token",
        "tokenClass": "pl-v",
        "tokenPattern": "variables"
      }
      ]
    }