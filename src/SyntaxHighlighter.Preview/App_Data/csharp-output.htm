<span class="pl-k" data-transform="Keywords">namespace</span> <span class="pl-e" data-transform="Exclusive Entities (Non-Scoped)">Shadowsocks</span>.<span class="pl-e" data-transform="Member Entities">Encryption</span>
{
    <span class="pl-k" data-transform="Keywords">public</span> <span class="pl-k" data-transform="Keywords">class</span> <span class="pl-e" data-transform="Exclusive Entities (Non-Scoped)">SodiumEncryptor</span>
        : <span class="pl-en" data-transform="Entity Names">IVEncryptor</span>, <span class="pl-v" data-transform="Variables">IDisposable</span>
    {
        <span class="pl-k" data-transform="Keywords">const</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">CIPHER_SALSA20</span> = <span class="pl-c1" data-transform="Numbers">1</span>;
        <span class="pl-k" data-transform="Keywords">const</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">CIPHER_CHACHA20</span> = <span class="pl-c1" data-transform="Numbers">2</span>;
        <span class="pl-k" data-transform="Keywords">const</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">CIPHER_CHACHA20_IETF</span> = <span class="pl-c1" data-transform="Numbers">3</span>;

        <span class="pl-k" data-transform="Keywords">const</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">SODIUM_BLOCK_SIZE</span> = <span class="pl-c1" data-transform="Numbers">64</span>;

        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">_encryptBytesRemaining</span>;
        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">_decryptBytesRemaining</span>;
        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">ulong</span> <span class="pl-v" data-transform="Variables">_encryptIC</span>;
        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">ulong</span> <span class="pl-v" data-transform="Variables">_decryptIC</span>;
        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">_encryptBuf</span>;
        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">_decryptBuf</span>;

        <span class="pl-k" data-transform="Keywords">public</span> <span class="pl-e" data-transform="Exclusive Entities (Non-Scoped)">SodiumEncryptor</span>(<span class="pl-k" data-transform="Keywords">string</span> <span class="pl-v" data-transform="Variables">method</span>, <span class="pl-k" data-transform="Keywords">string</span> <span class="pl-v" data-transform="Variables">password</span>, <span class="pl-k" data-transform="Keywords">bool</span> <span class="pl-v" data-transform="Variables">onetimeauth</span>, <span class="pl-k" data-transform="Keywords">bool</span> <span class="pl-v" data-transform="Variables">isudp</span>)
            : <span class="pl-k" data-transform="Keywords">base</span>(<span class="pl-v" data-transform="Variables">method</span>, <span class="pl-v" data-transform="Variables">password</span>, <span class="pl-v" data-transform="Variables">onetimeauth</span>, <span class="pl-v" data-transform="Variables">isudp</span>)
        {
            <span class="pl-v" data-transform="Variables">_encryptBuf</span> = <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-k" data-transform="Keywords">byte</span>[<span class="pl-v" data-transform="Variables">MAX_INPUT_SIZE</span> + <span class="pl-v" data-transform="Variables">SODIUM_BLOCK_SIZE</span>];
            <span class="pl-v" data-transform="Variables">_decryptBuf</span> = <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-k" data-transform="Keywords">byte</span>[<span class="pl-v" data-transform="Variables">MAX_INPUT_SIZE</span> + <span class="pl-v" data-transform="Variables">SODIUM_BLOCK_SIZE</span>];
        }

        <span class="pl-k" data-transform="Keywords">private</span> <span class="pl-k" data-transform="Keywords">static</span> <span class="pl-en" data-transform="Exclusive Entity Names">Dictionary</span><<span class="pl-en" data-transform="Entity Names">string</span>, <span class="pl-en" data-transform="Entity Names">EncryptorInfo</span>> <span class="pl-en" data-transform="Entity Names">_ciphers</span> = <span class="pl-en" data-transform="Entity Names">new</span> Dictionary<string, EncryptorInfo> {
            { <span class="pl-s" data-transform="Strings">"salsa20"</span>, <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-e" data-transform="Call Entities">EncryptorInfo</span>(<span class="pl-c1" data-transform="Numbers">32</span>, <span class="pl-c1" data-transform="Numbers">8</span>, <span class="pl-v" data-transform="Variables">CIPHER_SALSA20</span>) },
            { <span class="pl-s" data-transform="Strings">"chacha20"</span>, <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-e" data-transform="Call Entities">EncryptorInfo</span>(<span class="pl-c1" data-transform="Numbers">32</span>, <span class="pl-c1" data-transform="Numbers">8</span>, <span class="pl-v" data-transform="Variables">CIPHER_CHACHA20</span>) },
            { <span class="pl-s" data-transform="Strings">"chacha20-ietf"</span>, <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-e" data-transform="Call Entities">EncryptorInfo</span>(<span class="pl-c1" data-transform="Numbers">32</span>, <span class="pl-c1" data-transform="Numbers">12</span>, <span class="pl-v" data-transform="Variables">CIPHER_CHACHA20_IETF</span>) }
        };

        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">override</span> <span class="pl-en" data-transform="Exclusive Entity Names">Dictionary</span><<span class="pl-en" data-transform="Entity Names">string</span>, <span class="pl-en" data-transform="Entity Names">EncryptorInfo</span>> <span class="pl-e" data-transform="Call Entities">getCiphers</span>()
        {
            <span class="pl-k" data-transform="Keywords">return</span> <span class="pl-v" data-transform="Variables">_ciphers</span>;
        }

        <span class="pl-k" data-transform="Keywords">public</span> <span class="pl-k" data-transform="Keywords">static</span> <span class="pl-en" data-transform="Exclusive Entity Names">List</span><<span class="pl-k" data-transform="Keywords">string</span>> <span class="pl-e" data-transform="Call Entities">SupportedCiphers</span>()
        {
            <span class="pl-k" data-transform="Keywords">return</span> <span class="pl-k" data-transform="Keywords">new</span> <span class="pl-en" data-transform="Exclusive Entity Names">List</span><<span class="pl-k" data-transform="Keywords">string</span>>(<span class="pl-v" data-transform="Variables">_ciphers</span>.<span class="pl-e" data-transform="Member Entities">Keys</span>);
        }

        <span class="pl-k" data-transform="Keywords">protected</span> <span class="pl-k" data-transform="Keywords">override</span> <span class="pl-k" data-transform="Keywords">void</span> <span class="pl-e" data-transform="Call Entities">cipherUpdate</span>(<span class="pl-k" data-transform="Keywords">bool</span> <span class="pl-v" data-transform="Variables">isCipher</span>, <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">length</span>, <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">buf</span>, <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">outbuf</span>)
        {
            <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">bytesRemaining</span>;
            <span class="pl-k" data-transform="Keywords">ulong</span> <span class="pl-v" data-transform="Variables">ic</span>;
            <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">sodiumBuf</span>;
            <span class="pl-k" data-transform="Keywords">byte</span>[] <span class="pl-v" data-transform="Variables">iv</span>;

            <span class="pl-k" data-transform="Keywords">if</span> (<span class="pl-v" data-transform="Variables">isCipher</span>)
            {
                <span class="pl-v" data-transform="Variables">bytesRemaining</span> = <span class="pl-v" data-transform="Variables">_encryptBytesRemaining</span>;
                <span class="pl-v" data-transform="Variables">ic</span> = <span class="pl-v" data-transform="Variables">_encryptIC</span>;
                <span class="pl-v" data-transform="Variables">sodiumBuf</span> = <span class="pl-v" data-transform="Variables">_encryptBuf</span>;
                <span class="pl-v" data-transform="Variables">iv</span> = <span class="pl-v" data-transform="Variables">_encryptIV</span>;
            }
            <span class="pl-k" data-transform="Keywords">else</span>
            {
                <span class="pl-v" data-transform="Variables">bytesRemaining</span> = <span class="pl-v" data-transform="Variables">_decryptBytesRemaining</span>;
                <span class="pl-v" data-transform="Variables">ic</span> = <span class="pl-v" data-transform="Variables">_decryptIC</span>;
                <span class="pl-v" data-transform="Variables">sodiumBuf</span> = <span class="pl-v" data-transform="Variables">_decryptBuf</span>;
                <span class="pl-v" data-transform="Variables">iv</span> = <span class="pl-v" data-transform="Variables">_decryptIV</span>;
            }
            <span class="pl-k" data-transform="Keywords">int</span> <span class="pl-v" data-transform="Variables">padding</span> = <span class="pl-v" data-transform="Variables">bytesRemaining</span>;
            <span class="pl-v" data-transform="Variables">Buffer</span>.<span class="pl-e" data-transform="Member Entities">BlockCopy</span>(<span class="pl-v" data-transform="Variables">buf</span>, <span class="pl-c1" data-transform="Numbers">0</span>, <span class="pl-v" data-transform="Variables">sodiumBuf</span>, <span class="pl-v" data-transform="Variables">padding</span>, <span class="pl-v" data-transform="Variables">length</span>);

            <span class="pl-k" data-transform="Keywords">switch</span> (<span class="pl-v" data-transform="Variables">_cipher</span>)
            {
                <span class="pl-k" data-transform="Keywords">case</span> <span class="pl-c1" data-transform="Constant Identifiers">CIPHER_SALSA20</span>:
                    <span class="pl-v" data-transform="Variables">Sodium</span>.<span class="pl-e" data-transform="Member Entities">crypto_stream_salsa20_xor_ic</span>(<span class="pl-v" data-transform="Variables">sodiumBuf</span>, <span class="pl-v" data-transform="Variables">sodiumBuf</span>, (<span class="pl-k" data-transform="Keywords">ulong</span>)(<span class="pl-v" data-transform="Variables">padding</span> + <span class="pl-v" data-transform="Variables">length</span>), <span class="pl-v" data-transform="Variables">iv</span>, <span class="pl-v" data-transform="Variables">ic</span>, <span class="pl-v" data-transform="Variables">_key</span>);
                    <span class="pl-k" data-transform="Keywords">break</span>;
                <span class="pl-k" data-transform="Keywords">case</span> <span class="pl-c1" data-transform="Constant Identifiers">CIPHER_CHACHA20</span>:
                    <span class="pl-v" data-transform="Variables">Sodium</span>.<span class="pl-e" data-transform="Member Entities">crypto_stream_chacha20_xor_ic</span>(<span class="pl-v" data-transform="Variables">sodiumBuf</span>, <span class="pl-v" data-transform="Variables">sodiumBuf</span>, (<span class="pl-k" data-transform="Keywords">ulong</span>)(<span class="pl-v" data-transform="Variables">padding</span> + <span class="pl-v" data-transform="Variables">length</span>), <span class="pl-v" data-transform="Variables">iv</span>, <span class="pl-v" data-transform="Variables">ic</span>, <span class="pl-v" data-transform="Variables">_key</span>);
                    <span class="pl-k" data-transform="Keywords">break</span>;
                <span class="pl-k" data-transform="Keywords">case</span> <span class="pl-c1" data-transform="Constant Identifiers">CIPHER_CHACHA20_IETF</span>:
                    <span class="pl-v" data-transform="Variables">Sodium</span>.<span class="pl-e" data-transform="Member Entities">crypto_stream_chacha20_ietf_xor_ic</span>(<span class="pl-v" data-transform="Variables">sodiumBuf</span>, <span class="pl-v" data-transform="Variables">sodiumBuf</span>, (<span class="pl-k" data-transform="Keywords">ulong</span>)(<span class="pl-v" data-transform="Variables">padding</span> + <span class="pl-v" data-transform="Variables">length</span>), <span class="pl-v" data-transform="Variables">iv</span>, (<span class="pl-k" data-transform="Keywords">uint</span>)<span class="pl-v" data-transform="Variables">ic</span>, <span class="pl-v" data-transform="Variables">_key</span>);
                    <span class="pl-k" data-transform="Keywords">break</span>;
            }
            <span class="pl-v" data-transform="Variables">Buffer</span>.<span class="pl-e" data-transform="Member Entities">BlockCopy</span>(<span class="pl-v" data-transform="Variables">sodiumBuf</span>, <span class="pl-v" data-transform="Variables">padding</span>, <span class="pl-v" data-transform="Variables">outbuf</span>, <span class="pl-c1" data-transform="Numbers">0</span>, <span class="pl-v" data-transform="Variables">length</span>);
            <span class="pl-v" data-transform="Variables">padding</span> += <span class="pl-v" data-transform="Variables">length</span>;
            ic += (<span class="pl-k" data-transform="Keywords">ulong</span>)<span class="pl-v" data-transform="Variables">padding</span> / <span class="pl-v" data-transform="Variables">SODIUM_BLOCK_SIZE</span>;
            <span class="pl-v" data-transform="Variables">bytesRemaining</span> = <span class="pl-v" data-transform="Variables">padding</span> % <span class="pl-v" data-transform="Variables">SODIUM_BLOCK_SIZE</span>;

            <span class="pl-k" data-transform="Keywords">if</span> (<span class="pl-v" data-transform="Variables">isCipher</span>)
            {
                <span class="pl-v" data-transform="Variables">_encryptBytesRemaining</span> = <span class="pl-v" data-transform="Variables">bytesRemaining</span>;
                <span class="pl-v" data-transform="Variables">_encryptIC</span> = <span class="pl-v" data-transform="Variables">ic</span>;
            }
            <span class="pl-k" data-transform="Keywords">else</span>
            {
                <span class="pl-v" data-transform="Variables">_decryptBytesRemaining</span> = <span class="pl-v" data-transform="Variables">bytesRemaining</span>;
                <span class="pl-v" data-transform="Variables">_decryptIC</span> = <span class="pl-v" data-transform="Variables">ic</span>;
            }
        }

        <span class="pl-k" data-transform="Keywords">public</span> <span class="pl-k" data-transform="Keywords">override</span> <span class="pl-k" data-transform="Keywords">void</span> <span class="pl-e" data-transform="Call Entities">Dispose</span>()
        {
        }
    }
}
